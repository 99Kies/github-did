{"version":3,"sources":["webpack:///./src/pages/blog/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","blogPosts","allMarkdownRemark","edges","filter","p","node","fileAbsolutePath","indexOf","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","className","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5___default","gutterBottom","variant","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_6___default","container","spacing","map","_ref","frontmatter","fields","slug","item","xs","sm","key","_components_PageCard__WEBPACK_IMPORTED_MODULE_3__","image","date","excerpt","React","Component","pageQuery"],"mappings":"4OAaMA,oGACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MAGnCC,EAFQP,EAAKQ,kBAAkBC,MAEbC,OAAO,SAAAC,GAC7B,OAAuD,IAAhDA,EAAEC,KAAKC,iBAAiBC,QAAQ,aAGzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUlB,KAAKC,MAAMiB,SAAUb,MAAOH,GAC5CY,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEf,MAAM,OACNgB,SAAU,gDAGZP,EAAAC,EAAAC,cAACM,EAAAP,EAAD,CAAYQ,cAAY,EAACC,QAAQ,MAAjC,QAGAV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAMW,WAAS,EAACC,QAAS,IACtBrB,EAAUsB,IAAI,SAAAC,GAAc,IAAXlB,EAAWkB,EAAXlB,KACVN,EAAQM,EAAKmB,YAAYzB,OAASM,EAAKoB,OAAOC,KACpD,OACElB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAMkB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAKzB,EAAKoB,OAAOC,MACzClB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CACEhC,MAAOA,EACPiC,MAAO3B,EAAKmB,YAAYQ,MACxBC,KAAM5B,EAAKmB,YAAYS,KACvBP,KAAMrB,EAAKoB,OAAOC,KAClBQ,QAAS7B,EAAK6B,oBA/BVC,IAAMC,YA2Cf7C,YAER,IAAM8C,EAAS","file":"component---src-pages-blog-index-js-aa67204c6cc1866ef0ec.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../../components/layout\";\nimport PageCard from \"../../components/PageCard\";\nimport SEO from \"../../components/seo\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport \"../index.css\";\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    const blogPosts = posts.filter(p => {\n      return p.node.fileAbsolutePath.indexOf(\"/posts/\") !== -1;\n    });\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <div className=\"layout-inner\">\n          <SEO\n            title=\"Docs\"\n            keywords={[`DID`, `Github`, `Cryptography`, `Credentials`]}\n          />\n\n          <Typography gutterBottom variant=\"h5\">\n            Blog\n          </Typography>\n          <Grid container spacing={24}>\n            {blogPosts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <Grid item xs={12} sm={4} key={node.fields.slug}>\n                  <PageCard\n                    title={title}\n                    image={node.frontmatter.image}\n                    date={node.frontmatter.date}\n                    slug={node.fields.slug}\n                    excerpt={node.excerpt}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC } \n      filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n    ) {\n      edges {\n        node {\n          \n          fileAbsolutePath\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}