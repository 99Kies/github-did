{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["RootIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","tutorialPosts","filter","p","node","fileAbsolutePath","indexOf","blogPosts","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","className","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","boxShadow","to","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default","gutterBottom","variant","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_7___default","container","spacing","map","_ref","frontmatter","fields","slug","item","xs","sm","key","_components_PageCard__WEBPACK_IMPORTED_MODULE_4__","image","date","excerpt","_ref2","React","Component","pageQuery"],"mappings":"qPAaMA,oGACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAE/BC,EAAgBH,EAAMI,OAAO,SAAAC,GACjC,OAAuD,IAAhDA,EAAEC,KAAKC,iBAAiBC,QAAQ,aAGnCC,EAAYT,EAAMI,OAAO,SAAAC,GAC7B,OAAuD,IAAhDA,EAAEC,KAAKC,iBAAiBC,QAAQ,aAGzC,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUpB,KAAKC,MAAMmB,SAAUf,MAAOH,GAC5Cc,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEjB,MAAM,OACNkB,SAAU,gDAGZP,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,MAAO,CAAEC,UAAS,QAAYC,GAAI,cACtCX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,cAAY,EAACC,QAAQ,MAAjC,cAKFd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAMe,WAAS,EAACC,QAAS,IACtBxB,EAAcyB,IAAI,SAAAC,GAAc,IAAXvB,EAAWuB,EAAXvB,KACdP,EAAQO,EAAKwB,YAAY/B,OAASO,EAAKyB,OAAOC,KACpD,OACEtB,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAK9B,EAAKyB,OAAOC,MACzCtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEtC,MAAOA,EACPuC,MAAOhC,EAAKwB,YAAYQ,MACxBC,KAAMjC,EAAKwB,YAAYS,KACvBP,KAAM1B,EAAKyB,OAAOC,KAClBQ,QAASlC,EAAKkC,cAOxB9B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACM,EAAA,KAAD,CAAMC,MAAO,CAAEC,UAAS,QAAYC,GAAI,SACtCX,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAYY,cAAY,EAACC,QAAQ,MAAjC,SAKFd,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAMe,WAAS,EAACC,QAAS,IACtBlB,EAAUmB,IAAI,SAAAa,GAAc,IAAXnC,EAAWmC,EAAXnC,KACVP,EAAQO,EAAKwB,YAAY/B,OAASO,EAAKyB,OAAOC,KACpD,OACEtB,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAMsB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,IAAK9B,EAAKyB,OAAOC,MACzCtB,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CACEtC,MAAOA,EACPuC,MAAOhC,EAAKwB,YAAYQ,MACxBC,KAAMjC,EAAKwB,YAAYS,KACvBP,KAAM1B,EAAKyB,OAAOC,KAClBQ,QAASlC,EAAKkC,oBA9DVE,IAAMC,YA0EfpD,YAER,IAAMqD,EAAS","file":"component---src-pages-index-js-bdf18adf7602bf459726.js","sourcesContent":["import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport PageCard from \"../components/PageCard\";\nimport SEO from \"../components/seo\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport \"./index.css\";\n\nclass RootIndex extends React.Component {\n  render() {\n    const { data } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    const tutorialPosts = posts.filter(p => {\n      return p.node.fileAbsolutePath.indexOf(\"/posts/\") === -1;\n    });\n\n    const blogPosts = posts.filter(p => {\n      return p.node.fileAbsolutePath.indexOf(\"/posts/\") !== -1;\n    });\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <div className=\"layout-inner\">\n          <SEO\n            title=\"Docs\"\n            keywords={[`DID`, `Github`, `Cryptography`, `Credentials`]}\n          />\n\n          <Link style={{ boxShadow: `none` }} to={\"/tutorials\"}>\n            <Typography gutterBottom variant=\"h5\">\n              Tutorials\n            </Typography>\n          </Link>\n\n          <Grid container spacing={24}>\n            {tutorialPosts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <Grid item xs={12} sm={4} key={node.fields.slug}>\n                  <PageCard\n                    title={title}\n                    image={node.frontmatter.image}\n                    date={node.frontmatter.date}\n                    slug={node.fields.slug}\n                    excerpt={node.excerpt}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n\n          <br />\n          <Link style={{ boxShadow: `none` }} to={\"/blog\"}>\n            <Typography gutterBottom variant=\"h5\">\n              Blog\n            </Typography>\n          </Link>\n          \n          <Grid container spacing={24}>\n            {blogPosts.map(({ node }) => {\n              const title = node.frontmatter.title || node.fields.slug;\n              return (\n                <Grid item xs={12} sm={4} key={node.fields.slug}>\n                  <PageCard\n                    title={title}\n                    image={node.frontmatter.image}\n                    date={node.frontmatter.date}\n                    slug={node.fields.slug}\n                    excerpt={node.excerpt}\n                  />\n                </Grid>\n              );\n            })}\n          </Grid>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default RootIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC } # filter: { fileAbsolutePath: { regex: \"/posts/\" } }\n    ) {\n      edges {\n        node {\n          fileAbsolutePath\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}